-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Mutation exposing (AuthenticateRequiredArguments, CreateProposalRequiredArguments, RegisterRequiredArguments, UpdateProposalByIdRequiredArguments, UpdateProposalRequiredArguments, UpdateUserByIdRequiredArguments, UpdateUserRequiredArguments, authenticate, createProposal, register, updateProposal, updateProposalById, updateUser, updateUserById)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias CreateProposalRequiredArguments =
    { input : Api.InputObject.CreateProposalInput }


{-| Creates a single `Proposal`.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
createProposal : CreateProposalRequiredArguments -> SelectionSet decodesTo Api.Object.CreateProposalPayload -> SelectionSet (Maybe decodesTo) RootMutation
createProposal requiredArgs object_ =
    Object.selectionForCompositeField "createProposal" [ Argument.required "input" requiredArgs.input Api.InputObject.encodeCreateProposalInput ] object_ (identity >> Decode.nullable)


type alias UpdateProposalRequiredArguments =
    { input : Api.InputObject.UpdateProposalInput }


{-| Updates a single `Proposal` using its globally unique id and a patch.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
updateProposal : UpdateProposalRequiredArguments -> SelectionSet decodesTo Api.Object.UpdateProposalPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateProposal requiredArgs object_ =
    Object.selectionForCompositeField "updateProposal" [ Argument.required "input" requiredArgs.input Api.InputObject.encodeUpdateProposalInput ] object_ (identity >> Decode.nullable)


type alias UpdateProposalByIdRequiredArguments =
    { input : Api.InputObject.UpdateProposalByIdInput }


{-| Updates a single `Proposal` using a unique key and a patch.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
updateProposalById : UpdateProposalByIdRequiredArguments -> SelectionSet decodesTo Api.Object.UpdateProposalPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateProposalById requiredArgs object_ =
    Object.selectionForCompositeField "updateProposalById" [ Argument.required "input" requiredArgs.input Api.InputObject.encodeUpdateProposalByIdInput ] object_ (identity >> Decode.nullable)


type alias UpdateUserRequiredArguments =
    { input : Api.InputObject.UpdateUserInput }


{-| Updates a single `User` using its globally unique id and a patch.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
updateUser : UpdateUserRequiredArguments -> SelectionSet decodesTo Api.Object.UpdateUserPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateUser requiredArgs object_ =
    Object.selectionForCompositeField "updateUser" [ Argument.required "input" requiredArgs.input Api.InputObject.encodeUpdateUserInput ] object_ (identity >> Decode.nullable)


type alias UpdateUserByIdRequiredArguments =
    { input : Api.InputObject.UpdateUserByIdInput }


{-| Updates a single `User` using a unique key and a patch.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
updateUserById : UpdateUserByIdRequiredArguments -> SelectionSet decodesTo Api.Object.UpdateUserPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateUserById requiredArgs object_ =
    Object.selectionForCompositeField "updateUserById" [ Argument.required "input" requiredArgs.input Api.InputObject.encodeUpdateUserByIdInput ] object_ (identity >> Decode.nullable)


type alias AuthenticateRequiredArguments =
    { input : Api.InputObject.AuthenticateInput }


{-| Creates a JWT token that will identify further calls.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
authenticate : AuthenticateRequiredArguments -> SelectionSet decodesTo Api.Object.AuthenticatePayload -> SelectionSet (Maybe decodesTo) RootMutation
authenticate requiredArgs object_ =
    Object.selectionForCompositeField "authenticate" [ Argument.required "input" requiredArgs.input Api.InputObject.encodeAuthenticateInput ] object_ (identity >> Decode.nullable)


type alias RegisterRequiredArguments =
    { input : Api.InputObject.RegisterInput }


{-|

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
register : RegisterRequiredArguments -> SelectionSet decodesTo Api.Object.RegisterPayload -> SelectionSet (Maybe decodesTo) RootMutation
register requiredArgs object_ =
    Object.selectionForCompositeField "register" [ Argument.required "input" requiredArgs.input Api.InputObject.encodeRegisterInput ] object_ (identity >> Decode.nullable)
