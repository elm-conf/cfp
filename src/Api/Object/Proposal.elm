-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Proposal exposing (abstract, author, authorId, createdAt, feedback, id, nodeId, outline, pitch, title, updatedAt)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| A globally unique identifier. Can be used in various places throughout the system to identify this single value.
-}
nodeId : SelectionSet Api.ScalarCodecs.Id Api.Object.Proposal
nodeId =
    Object.selectionForField "ScalarCodecs.Id" "nodeId" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


id : SelectionSet Int Api.Object.Proposal
id =
    Object.selectionForField "Int" "id" [] Decode.int


authorId : SelectionSet Int Api.Object.Proposal
authorId =
    Object.selectionForField "Int" "authorId" [] Decode.int


title : SelectionSet String Api.Object.Proposal
title =
    Object.selectionForField "String" "title" [] Decode.string


abstract : SelectionSet String Api.Object.Proposal
abstract =
    Object.selectionForField "String" "abstract" [] Decode.string


pitch : SelectionSet String Api.Object.Proposal
pitch =
    Object.selectionForField "String" "pitch" [] Decode.string


outline : SelectionSet String Api.Object.Proposal
outline =
    Object.selectionForField "String" "outline" [] Decode.string


feedback : SelectionSet String Api.Object.Proposal
feedback =
    Object.selectionForField "String" "feedback" [] Decode.string


createdAt : SelectionSet Api.ScalarCodecs.Datetime Api.Object.Proposal
createdAt =
    Object.selectionForField "ScalarCodecs.Datetime" "createdAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDatetime |> .decoder)


updatedAt : SelectionSet Api.ScalarCodecs.Datetime Api.Object.Proposal
updatedAt =
    Object.selectionForField "ScalarCodecs.Datetime" "updatedAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDatetime |> .decoder)


{-| Reads a single `User` that is related to this `Proposal`.
-}
author : SelectionSet decodesTo Api.Object.User -> SelectionSet (Maybe decodesTo) Api.Object.Proposal
author object_ =
    Object.selectionForCompositeField "author" [] object_ (identity >> Decode.nullable)
