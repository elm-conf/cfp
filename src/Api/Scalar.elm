-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Scalar exposing (Codecs, Cursor(..), Id(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Cursor
    = Cursor String


type Id
    = Id String


defineCodecs :
    { codecCursor : Codec valueCursor
    , codecId : Codec valueId
    }
    -> Codecs valueCursor valueId
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueCursor valueId
    ->
        { codecCursor : Codec valueCursor
        , codecId : Codec valueId
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueCursor valueId
    = Codecs (RawCodecs valueCursor valueId)


type alias RawCodecs valueCursor valueId =
    { codecCursor : Codec valueCursor
    , codecId : Codec valueId
    }


defaultCodecs : RawCodecs Cursor Id
defaultCodecs =
    { codecCursor =
        { encoder = \(Cursor raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Cursor
        }
    , codecId =
        { encoder = \(Id raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Id
        }
    }
